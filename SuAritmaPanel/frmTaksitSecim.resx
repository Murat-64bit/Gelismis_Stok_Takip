<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnMusteriler.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAxRJREFUaEPt
        mc9rE0EcxSP+GR4Er+LBgzcRD57UJF56ULCkomA8tMGadpNNbW1tLWoP/migVhPQSkLairXZtBQUI4F4
        EHLoQaEKCkoRBbWX9Fc67muncTM7Npswmw1hHzxI3szOdz7JzGTZOGzVq8Kzn3xDU+9fm2nUoOXMEwpJ
        D7JkMDFfMMMYGzVoOfOEIii4sESIGcbYNkglsgLEFUyNuGTlnc5BJYO247Kyl3Y1LitAnLJy2hlMdrJW
        Yfq2YJQ/TnnmMO1uTDyQ3OIySS/8rsq4VjsWD2RnkV2uQPKeCvOxqSmxm4blxQOJZb6QK+FMVca12rEq
        B3E4TsrTe1QQ4pJSB2lUXjwQka4GBALIqdD0Ufq2vBoaBGsdS6Qa41rtWJaCKLnvZGhyvirjWu1YRkHc
        XcoBdyh5bNtbIMn24ntZOUK78sUDEWmjICek5D71N+Tb5ibXe9Utp5y0K1/1AgI5u2b3qzA/GYiCO6ic
        oV3+Lx6IFUtrW05p5pA6+SUKsaEuqYu0aWfxQKze7NjkKkTeHVAkGpUXD0SkqwGBsPnpS2OqV5CKxQPB
        EuHdfvDM3luxzv4g+fQi6aHlzBMPpJKbxg+/CsXr7qdfkNDzcIk7nw0XWmM3v56LBN6KcEtEyp595PfQ
        6f+TyKWFifsnBsntVyMlvqbcIcGpW7p8YG6Y+Cdv6HIYOdrZ3Dt2da15tEP/DYsGQbG5zy9LjAyAbP4k
        N0GaH3bochg52tm8fXwgb4MYteUgIh4H4XTCxrYMRNQDOhyxOJ2wsTFxrbFxvWPdurxH7YsJszmMHO1s
        7kv0L3NBRArHI04nfPpaX1IhzkdlXd4W79ucMJvDyNHO5mq2UhMQfGrsckCGSbC50KUlUjYIk8M2iAgB
        BLcVmIDWOMl88eu6/O6baHHCrJGjnc0vj/fXBgRHLSZhlltjvfapZVg2CJPDNogINRRIw5xaDfM7Yu8R
        xjaICDUMCB6e4bkTimntfdq9duGxvM7mbfHeFU9E2mBzGDna2bwlGlg3HQRPAFHEbHtGJeN/ydmqqRyO
        v/nQNVjSji9pAAAAAElFTkSuQmCC
</value>
  </data>
</root>